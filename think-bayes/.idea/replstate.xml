<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1424355577449">{:repl-history {:ide [], :local [&quot;(reduce + (map (/ 1 %) (range 1 7)))&quot; &quot;nREPL server started on port 53873 on host 127.0.0.1\n(reduce + #(map (/ 1 %) (range 1 7)))&quot; &quot;(reduce + #(map (/ 1 %) (range 1 7)))&quot; &quot;(reduce + (map #(/ 1 %) (range 1 7)))&quot; &quot;(rand 6)&quot; &quot;(def x 1)&quot; &quot;#'user/x&quot; &quot;#'x&quot; &quot;(var #'x)&quot; &quot;(meta #'x)&quot; &quot;(meta x)&quot; &quot;(meta filter)&quot; &quot;(meta #'filter)&quot; &quot;(eval #'x)&quot; &quot;(eval x)&quot; &quot;(val #'x)&quot; &quot;(value #'x)&quot; &quot;(var? #'x)&quot; &quot;(var? `(+ x x))&quot; &quot;''x&quot; &quot;'`(a b ~c)&quot; &quot;(fn [a b] (println (var? a))) (1 2)&quot; &quot;((fn [a b] (println (var? a))) 1 2)&quot; &quot;(var? x)&quot; &quot;(symbol? x)&quot; &quot;(int? x)&quot; &quot;(inc Math/PI)&quot; &quot;(def cookies {1 1, 2 1})&quot; &quot;(def mixes {1 {:vanilla 0.75, :chocolate 0.25},\n            2 {:vanilla 0.5,  :chocolate 0.5}})&quot; &quot;(defn likelihood [d h] (-&gt; mixes (h) (d)))&quot; &quot;(mixes 1)&quot; &quot;(-&gt; mixes (1))&quot; &quot;(-&gt; mixes 1)&quot; &quot;(use 'think-bayes\n     )&quot; &quot;(use '(think-bayes))&quot; &quot;(use 'think-bayes.pmf)&quot; &quot;(defn update [pmf data] (reduce #(think-bayes.pmf/multiply-mass %1 (likelihood data %2)) pmf (keys pmf)))&quot; &quot;(use 'think-bayes.cookie)&quot; &quot;(think-bayes.cookie/update {} :unused :unused)&quot; &quot;(think-bayes.cookie/update {\&quot;lorem\&quot; 1} :unused (fn [_d h] (* 2 h)))&quot; &quot;(def many-hypothesis-cookie (cookie/init (range 1 7)))&quot; &quot;()&quot; &quot;(def many-hypothesis-cookie (think-bayes.cookie/init (range 1 7)))&quot; &quot;many-hypothesis-cookie&quot; &quot;(think-bayes.cookie/update many-hypothesis-cookie 3 (fn [_d _h] 1/36))&quot; &quot;(def bowls (think-bayes.cookie/init [1 2]))&quot; &quot;(def mixes = {1 {:vanilla 0.75, :chocolate 0.25},\n              2 {:vanilla 0.5, :chocolate 0.5}})&quot; &quot;(def mixes {1 {:vanilla 0.75, :chocolate 0.25},\n              2 {:vanilla 0.5, :chocolate 0.5}})&quot; &quot;mixes&quot; &quot;(defn likelihood [d h] (-&gt; mixes (get h) (get d)))&quot; &quot;(def mixes {1 {:vanilla 3/4, :chocolate 1/4},\n            2 {:vanilla 1/2, :chocolate 1/2}})&quot; &quot;(-&gt; mixes (get 1) (get :vanilla))&quot; &quot;bowls&quot; &quot;(likelihood :vanilla 1)&quot; &quot;(likelihood :chocolate 1)&quot; &quot;(likelihood :vanilla 2)&quot; &quot;(likelihood :chocolate 2)&quot; &quot;(think-bayes.pmf/multiply-mass bowls 1 (likelihood :vanilla 1))&quot; &quot;(think-bayes.pmf/multiply-mass bowls 2 (likelihood :vanilla 2))&quot; &quot;(think-bayes.pmf/multiply-mass *2 2 (likelihood :vanilla 2))&quot; &quot;(think-bayes.pmf/probability *1 1)&quot; &quot;(think-bayes.pmf/probability *2 2)&quot; &quot;(think-bayes.cookie/update bowls :vanilla likelihood)&quot; &quot;(keys bowls)&quot;], :remote []}}</component>
</project>